{# le template hérite de base.html.twig = il reprend son contenu #}
{% extends 'base.html.twig' %}

{# {{ parent() }} reprend le contenu du bloc title défini dans base.html.twig #}
{% block title %}
    {{ parent() }} - Twig
{% endblock %}

{# Surchage du bloc body défini dans base.html.twig #}
{% block body %}
    {# définit une variable #}
    {% set test = 'Une variable de test' %}

    {# affichage de la variable dans un paragraphe : #}
    <p>{{ test }}</p>

    {# concaténation avec le tilde #}
    <p>{{ test ~ ' !' }}</p>

    {# équivalent d'un var_dump() #}
    {{ dump(test) }}

    {# structure conditionnelle #}
    {% if test != '' %}
        <p>test n'est pas une chaîne vide</p>
    {% else %}
        <p>test est une chaîne vide</p>
    {% endif %}

    {% set vrai = true %}
    {% set faux = false %}

    {# not en toutes lettres : if (!$faux) #}
    {% if not faux %}
        <p>faux n'est pas vrai</p>
    {% endif %}

    {#
    and et or en toutes lettres :
    if ($vrai && !$faux)
    #}
    {% if vrai and not faux %}
        <p>vrai est vrai et faux n'est pas vrai</p>
    {% endif %}

    {% set tableau = [1, 2, 3, 4] %}

    {# foreach ($tableau as $nb) #}
    {% for nb in tableau %}
        {{ nb }}<br>
    {% endfor %}

    {# pour accéder à la valeur à l'indice 1 : #}
    <p>{{ tableau[1] }}</p>
    {# ou : #}
    <p>{{ tableau.1 }}</p>

    {# for ($i = 0; $i <= 10; $i++) #}
    {% for i in 0..10 %}
        {{ i }}<br>
    {% endfor %}
    <br>
    {# for ($i = 10; $i >= 0; $i--) #}
    {% for i in 10..0 %}
        {{ i }}<br>
    {% endfor %}

    <p>
        {# for ($i = 0; $i <= 10; $i += 2) #}
        {% for i in range(0, 10, 2) %}
            {{ i }},
        {% endfor %}
    </p>

    {#
    tableau associatif :
    $assoc = ['nom' => 'Anest', 'prenom' => 'Julien']
    #}
    {% set assoc = {nom: 'Anest', prenom: "Julien"} %}

    {# pour accéder à la valeur à la clé nom : #}
    <p>{{ assoc['nom'] }}</p>
    {# ou : #}
    <p>{{ assoc.nom }}</p>

    {# foreach ($assoc as $key => $value) #}
    {% for key, value in assoc %}
        {{ key }} : {{ value }}<br>
    {% endfor %}

    {% set vide  = [] %}

    {# on rentre dans le reste d'un for si le tableau est vide #}
    {% for value in vide %}
        {{ value }}<br>
    {% else %}
        <p>Le tableau est vide</p>
    {% endfor %}

    {% for nb in tableau %}
        Tour de boucle (index 1) : {{ loop.index }}<br>
        Tour de boucle (index 0) : {{ loop.index0 }}<br>

        {% if loop.first %}
            1er tour de boucle<br>
        {% endif %}

        {% if loop.last %}
            Dernier tour de boucle<br>
        {% endif %}

        {% if loop.index == 3 %}
            3e tour de boucle<br>
        {% endif %}

        {{ nb }}<br>
    {% endfor %}

    {# TESTS AVEC is ET is not #}

    {# if (isset($test)) #}
    {% if test is defined %}
        <p>La variable test existe</p>
    {% endif %}

    {# if (!empty($test)) #}
    {% if test is not empty %}
        <p>La variable test n'est pas vide</p>
    {% endif %}

    {% set dix = 10 %}

    {# if ($dix % 5 == 0) #}
    {% if dix is divisible by(5) %}
        <p>{{ dix }} est divisible par 5</p>
    {% endif %}

    {# even et odd pour pair et impair #}
    {% if dix is even %}
        <p>{{ dix }} est pair</p>
    {% endif %}

    {% if dix is not odd %}
        <p>{{ dix }} n'est pas impair</p>
    {% endif %}

    {# if (in_array(2, $tableau)) #}
    {% if 2 in tableau %}
        <p>Le tableau contient la valeur 2</p>
    {% endif %}

    {% if 'Julien' in assoc %}
        <p>Assoc contient 'Julien'</p>
    {% endif %}

    {# FILTRES AVEC pipe | #}

    {# strtoupper($test) #}
    <p>{{ test|upper }}</p>

    {# valeur par défaut quand la variable est vide (empty) #}
    <p>{{ var|default('La variable var est vide') }}</p>

    {# on peut cumuler les filtres #}
    <p>{{ var|default('La variable var est vide')|upper }}</p>

    {# first et last pour 1er et dernier élément d'un tableau #}
    <p>{{ assoc|last }}</p>

    {# formatage de date #}
    <p>{{ '2020-02-03'|date('d/m/Y') }}</p>

    {# ... sur un objet DateTime #}
    <p>{{ demain|date('d/m/Y H:i') }}</p>

    {#
    identique à l'appel à la méthode format() de DateTime
    L'appel d'une méthode d'un objet se fait avec un point
    #}
    <p>{{ demain.format('d/m/Y H:i') }}</p>

    {% set html = '<p>Un paragraphe</p>' %}

    {#
    par défaut le HTML est échappé en entités HTML
    soit &lt; pour < et &gt; pour >
    #}
    {{ html }}

    {# pour que le HTML ne soit pas échappé : #}
    {{ html|raw }}

    {#
    inclusion d'un autre fichier :
    chemin à partir de la racine du répertoire templates
    #}
    {% include 'twig/inclus.html.twig' %}

    {# le fichier inclus n'a pas accès aux variables venant de ce fichier #}
    {% include 'twig/inclus.html.twig' only %}

    {# Le fichier inclus a accès à une variable foo qui vaut 'BAR' #}
    {% include 'twig/inclus.html.twig' with {foo: "BAR"} %}

    {# Le fichier inclus n'a accès qu'à une variable foo qui vaut 'BAR' #}
    {% include 'twig/inclus.html.twig' with {foo: "BAR"} only %}

{% endblock %}